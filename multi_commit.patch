From 988093e37b2ec7e0215609bce5445569a1a33612 Mon Sep 17 00:00:00 2001
From: Joe Ferrer <joe@theforage.com>
Date: Wed, 1 Mar 2023 01:05:18 +1100
Subject: [PATCH 1/3] Move python files to datafeed dir

---
 requirements.txt => datafeed/requirements.txt | 0
 server.py => datafeed/server3.py              | 0
 2 files changed, 0 insertions(+), 0 deletions(-)
 rename requirements.txt => datafeed/requirements.txt (100%)
 rename server.py => datafeed/server3.py (100%)

diff --git a/requirements.txt b/datafeed/requirements.txt
similarity index 100%
rename from requirements.txt
rename to datafeed/requirements.txt
diff --git a/server.py b/datafeed/server3.py
similarity index 100%
rename from server.py
rename to datafeed/server3.py
-- 
2.39.2 (Apple Git-143)


From 0e2aac2064dc36539f3536b6c8c802df7d7f5e39 Mon Sep 17 00:00:00 2001
From: varu21 <123957189+varu21@users.noreply.github.com>
Date: Wed, 19 Jul 2023 15:48:55 +0530
Subject: [PATCH 2/3] update graph.tsx

---
 src/Graph.tsx | 27 ++++++++++++++++-----------
 1 file changed, 16 insertions(+), 11 deletions(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..ce4f6cb 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+     price_abc: 'float',
+     price_def: 'float',
+     ratio: 'float',
+     timestamp: 'date',
+     upper_bound: 'float',
+     lower_bound: 'float',
+     trigger_alert: 'float'
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -38,21 +41,23 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('view', 'y_line');
       elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound","upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
-
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ] as unknown as TableData);
     }
   }
 }
-- 
2.39.2 (Apple Git-143)


From 59a4784f22723c5b4a5f729a4450e3caa2824fe5 Mon Sep 17 00:00:00 2001
From: varu21 <123957189+varu21@users.noreply.github.com>
Date: Wed, 19 Jul 2023 16:03:58 +0530
Subject: [PATCH 3/3] update dm

---
 src/DataManipulator.ts | 32 ++++++++++++++++++++++----------
 1 file changed, 22 insertions(+), 10 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..7c59901 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number;
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price)/2;
+    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price)/2;
+    const ratio = priceABC/priceDEF;
+    const upperBound = 1+0.05;
+    const lowerBound = 1-0.05;
+    return {
+        price_abc: priceABC,
+        price_def: priceDEF,
+        ratio,
+        timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
+         serverRespond[0].timestamp : serverRespond[1].timestamp,
+         upper_bound: upperBound,
+         lower_bound: lowerBound,
+         trigger_alert: (ratio>upperBound || ratio<lowerBound) ? ratio : undefined,
       };
-    })
+    }
   }
-}
-- 
2.39.2 (Apple Git-143)

